###########################################################
# DESCRIPTION
# The main wercker configuration is meant to detect changes in the project structure in order to trig the pipelines for the changes projects
###########################################################
box: ubuntu:16.10

# TODO: work on caching for all the steps
# TODO: version pin steps

###########################################################
# DRAFT
# Main pipeline to detect what has been changed 
###########################################################
what-to-build:
  steps:
    # TODO: # this is going to be moved and handled by a requirements file in devops / base-images for building (fast approach for the first iterations, improved over time)
    - install-packages:
        packages: jq curl
    - script:
        name: Check diffs and trigger builds
        cwd: ./devops
        code: |
          # Check diffs and trigger builds
          ./diffs-check-and-trigger-builds.sh
    - script:
        name: Add a file to WERCKER_OUTPUT_DIR, to speed up the not needed store step
        code: touch $WERCKER_OUTPUT_DIR/.skip

# TODO: similar pipelines can be made generic and triggered using env variables to set the actual project to build

###########################################################
# DRAFT
# BUILD PIPELINES
###########################################################

###########################################################
# DRAFT
# Pipeline used to build: benchflow-dsl
###########################################################
build-benchflow-dsl:
  box: maven:3.3.9-jdk-8
  steps:
    # Since now we do not have the deploy phase in our project, it would fail to call it, then we stop to the verify phase, that include also the package one. 
    - xenoterracide/maven:
        goals: verify
        args: -f $WERCKER_SOURCE_DIR/benchflow-dsl
    - script:
        name: Copy benchflow-dsl to WERCKER_OUTPUT_DIR
        code: cp $WERCKER_SOURCE_DIR/benchflow-dsl/target/benchflow-dsl.jar $WERCKER_OUTPUT_DIR

###########################################################
# DRAFT
# DEPLOY PIPELINES
###########################################################

###########################################################
# DRAFT
# Pipeline used to deploy on Bintray: benchflow-dsl
###########################################################
deploy-benchflow-dsl:
  steps:
     # TODO: # this is going to be moved and handled by a requirements file in devops / base-images for building (fast approach for the first iterations, improved over time)
    - install-packages:
        packages: jq curl
    - script:
        name: Generate the Image Tag
        cwd: ./devops
        code: ./generate-commit-specific-tag.sh
    - script:
        name: Deliver benchflow-dsl on Bintray
        cwd: ./devops
        code: |
          # Deliver branch and commit specific artifacts on Bintray
          export ARTIFACT_NAME=benchflow-dsl
          ./deliver-on-bintray.sh

###########################################################
# DRAFT
# BUILD AND DEPLOY PIPELINES
###########################################################

###########################################################
# DRAFT
# Pipeline used to build and deploy on Docker Hub: docker-images/base-images/chaperone
# See: docker-images/base-images/chaperone/README.md
###########################################################
build-base-images-chaperone-binaries:
  # See: https://github.com/wercker/wercker/issues/262
  box: 
    id: alpine:3.5
    cmd: /bin/sh
  steps:
    # Install all development tools...
    # See: https://github.com/ytet5uy4/step-apk-add
    - ytet5uy4/apk-add@0.1.2:
        name: Install all development tools
        update: "true"
        cache: "true"
        packages: python3-dev gcc bash git musl-dev
    - script:
        name: Build the Binaries
        # Set the working folder, so we can refer to files in that context
        cwd:  $WERCKER_SOURCE_DIR/docker-images/base-images/chaperone/setup
        # NOTE: Due to the need of the cmd: /bin/sh command above
        #       We need to use source here, so we get the code executed in the current shell
        code: source create-binaries.sh
    - script:
        name: Copy the Binaries to the WERCKER_OUTPUT_DIR
        cwd: $WERCKER_SOURCE_DIR/docker-images/base-images/chaperone/setup/lib
        code: cp setproctitle-install.tar.gz $WERCKER_OUTPUT_DIR

# Starting with package-, instead of build-, because it is chained in a workflow with 
# build-base-images-chaperone-binaries and CI scripts search for pipelines starting with build-
# when it is time to build something, so we use build- only if it is the first pipeline in a workflow
# Last Version on: https://github.com/garywiz/chaperone-docker
# 1.0.16-U14
# Current Custom Version on: https://github.com/garywiz/chaperone-docker
# 1.0.17-U14
# Base Images Versioning:
  # Current Version: 0.1.0 (see: docker-images/base-images/chaperone/setup/version.inc)
# NOTE: Base images have version defined manually and dictated by the version set to chaperone,
#       because currently no matter what we update we start the build from the chaperone images
#       by updating the version in docker-images/base-images/chaperone/setup/version.inc, that 
#       triggers a rebuild of the image, so that we can reference to the new version in dependent images
#       given that now they are always build in a pipelines starting with build-base-images-chaperone-binaries
# TODO: Monitor https://github.com/garywiz/chaperone-docker/issues/5
# DECIDE: If migrate to the following image at some point: https://github.com/phusion/baseimage-docker
package-and-deploy-base-images-chaperone:
  # See: https://github.com/wercker/wercker/issues/262
  box: 
    id: alpine:3.5
    cmd: /bin/sh
  steps:
    # See: https://github.com/ytet5uy4/step-apk-add
    - ytet5uy4/apk-add@0.1.2:
        name: Install chaperone and dependencies
        update: "true"
        cache: "true"
        packages: musl python3 bash sudo
    - script:
        name: Configure container
        cwd: $WERCKER_SOURCE_DIR/docker-images/base-images/chaperone/setup
        code: |
          # Binaries folder ($WERCKER_OUTPUT_DIR)
          export BINARIES_FOLDER=$WERCKER_OUTPUT_DIR
          source install.sh
    - script:
        name: Cleanup the Image
        cwd: ./devops
        code: ./cleanup-wercker-build.sh
    - script:
        name: Manually Set the Image Tag
        code: export CUSTOM_VERSION_TAG=chaperone_0.1.0
    # push container as-is
    - internal/docker-push:
        author: Vincenzo FERME <info@vincenzoferme.it>
        disable-sync: false
        repository: benchflow/base-images
        email: $DOCKER_HUB_EMAIL
        username: $DOCKER_HUB_USERNAME
        password: $DOCKER_HUB_PASSWORD
        tag: chaperone_$CUSTOM_VERSION_TAG
        # _CHAP_OPTIONS - Used instead entrypoint args so that any default can be overridden by CMD
        env: "_CHAP_OPTIONS=--config apps/chaperone.d --default-home / --user runapps"
        entrypoint: "/usr/local/bin/chaperone"

###########################################################
# DRAFT
# Pipeline used to build and deploy on Docker Hub: docker-images/base-images/base
###########################################################
build-and-deploy-base-images-base:
  box: benchflow/base-images:chaperone_0.1.0
  steps:
    - script:
        name: Build the Image
        cwd: ./docker-images/base-images/base
        code: ./build-image.sh
    - script:
        name: Cleanup the Image
        cwd: ./devops
        code: ./cleanup-wercker-build.sh
    - script:
        name: Manually Set the Image Tag
        code: export CUSTOM_VERSION_TAG=base_0.1.0
    # push container as-is
    - internal/docker-push:
        author: Vincenzo FERME <info@vincenzoferme.it>
        disable-sync: false
        repository: benchflow/base-images
        email: $DOCKER_HUB_EMAIL
        username: $DOCKER_HUB_USERNAME
        password: $DOCKER_HUB_PASSWORD
        # NOTE: first we push the commit specific image, then the image for the branch
        tag: $CUSTOM_VERSION_TAG,$WERCKER_GIT_BRANCH
        entrypoint: "/usr/local/bin/chaperone"