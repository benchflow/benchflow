###########################################################
# DESCRIPTION
# The main wercker configuration is meant to detect changes in the project structure in order to trig the pipelines for the changes projects
###########################################################
box: ubuntu:16.10

# TODO: work on caching for all the steps

###########################################################
# DRAFT
# Main pipeline to detect what has been changed 
###########################################################
what-to-build:
  steps:
    # TODO: # this is going to be moved and handled by a requirements file in devops / base-images for building (fast approach for the first iterations, improved over time)
    - install-packages:
        packages: jq curl
    - script:
        name: Check diffs and trigger builds
        code: |
          # Check diffs and trigger builds
          ./devops/diffs-check-and-trigger-builds.sh

# TODO: similar pipelines can be made generic and triggered using env variables to set the actual project to build

###########################################################
# DRAFT
# Pipeline used to build and deploy on Bintray: benchflow-dsl
###########################################################
build-and-deploy-benchflow-dsl:
  box: maven:3.3.9-jdk-8
  steps:
    - script:
        name: Wait for dependent build to finish
        code: |
          # Keep waiting until the dependent build is successfully completed, or kills the build if the dependent build fails
          ./devops/wait-source-run-completion.sh
    - xenoterracide/maven:
        goals: package
        args: -f $WERCKER_SOURCE_DIR/benchflow-dsl
     # TODO: # this is going to be moved and handled by a requirements file in devops / base-images for building (fast approach for the first iterations, improved over time)
    - install-packages:
        packages: jq curl
    - script:
        name: Deliver benchflow-dsl on Bintray
        cwd: $WERCKER_SOURCE_DIR/benchflow-dsl/target
        code: |
          export CUSTOM_VERSION_TAG=${WERCKER_GIT_BRANCH}"_"${WERCKER_GIT_COMMIT:0:6}
          # Creates the version (nothing happens if already exists)
          echo "Creating version for commit..."
          curl -v -u$BINTRAY_ADMIN_USERNAME:$BINTRAY_API_KEY -H "Content-Type: application/json" -X POST -d '{"name": "'"$WERCKER_GIT_BRANCH_$CUSTOM_VERSION_TAG"'", "desc": "'"$WERCKER_GIT_BRANCH_$CUSTOM_VERSION_TAG"'"}' "https://api.bintray.com/packages/$BINTRAY_USERNAME/$BINTRAY_USERNAME-maven/$BINTRAY_USERNAME-dsl/versions" | jq .
          echo ""
          echo "Creating version for branch..."
          curl -v -u$BINTRAY_ADMIN_USERNAME:$BINTRAY_API_KEY -H "Content-Type: application/json" -X POST -d '{"name": "'"$WERCKER_GIT_BRANCH"'", "desc": "'"$WERCKER_GIT_BRANCH"'"}' "https://api.bintray.com/packages/$BINTRAY_USERNAME/$BINTRAY_USERNAME-maven/$BINTRAY_USERNAME-dsl/versions" | jq .
          echo ""
          echo "Uploading artefact for commit..."
          curl -T benchflow-dsl.jar -u$BINTRAY_ADMIN_USERNAME:$BINTRAY_API_KEY "https://api.bintray.com/content/$BINTRAY_USERNAME/$BINTRAY_USERNAME-maven/$BINTRAY_USERNAME-dsl/$WERCKER_GIT_BRANCH_$CUSTOM_VERSION_TAG/benchflow-dsl_$WERCKER_GIT_BRANCH_$CUSTOM_VERSION_TAG.jar?publish=1&override=1" | jq .
          echo ""
          echo "Uploading artefact for branch..."
          curl -T benchflow-dsl.jar -u$BINTRAY_ADMIN_USERNAME:$BINTRAY_API_KEY "https://api.bintray.com/content/$BINTRAY_USERNAME/$BINTRAY_USERNAME-maven/$BINTRAY_USERNAME-dsl/$WERCKER_GIT_BRANCH/benchflow-dsl_$WERCKER_GIT_BRANCH.jar?publish=1&override=1" | jq .