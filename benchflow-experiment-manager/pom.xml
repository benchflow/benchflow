<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cloud.benchflow</groupId>
    <artifactId>benchflow-experiment-manager</artifactId>
    <version>0.1.0</version>
    <name>benchflow-experiment-manager</name>

    <packaging>pom</packaging>
    <modules>
        <module>api</module>
        <module>application</module>
    </modules>

    <properties>
        <project.name>benchflow-experiment-manager</project.name>
        <project.mainclass>cloud.benchflow.experimentmanager.BenchFlowExperimentManagerApplication</project.mainclass>
        <project.configurationfile>configuration.yml</project.configurationfile>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <main.basedir>${project.basedir}</main.basedir>
        <java.version>1.8</java.version>
        <dropwizard.version>1.0.6</dropwizard.version>
        <dropwizard.template.config.version>1.4.0</dropwizard.template.config.version>
        <!-- <fabanClient-client.version>dev</fabanClient-client.version> -->
        <benchflow-dsl.project.name>benchflow-dsl</benchflow-dsl.project.name>
        <benchflow-dsl.version>feature-dsl-demo-conversion_86cf41</benchflow-dsl.version>
        <morphia.version>1.3.2</morphia.version>
        <minio.version>3.0.3</minio.version>
        <commons-io.version>2.5</commons-io.version>
        <docker-compose-rule-junit4.version>0.31.1</docker-compose-rule-junit4.version>
        <wiremock.version>2.5.1</wiremock.version>
        <dropwizard-swagger.version>1.0.6-1</dropwizard-swagger.version>
        <exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
        <maven-shade-plugin.verions>2.4.1</maven-shade-plugin.verions>
        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
        <maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.20</maven-failsafe-plugin.version>
        <download-maven-plugin.version>1.3.0</download-maven-plugin.version>
    </properties>

    <repositories>

        <!-- for docker-compose-rule -->
        <repository>
            <id>palantir</id>
            <url>https://dl.bintray.com/palantir/releases</url>
        </repository>

    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-core</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-testing</artifactId>
                <version>${dropwizard.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-client</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-forms</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>

            <!-- https://github.com/tkrille/dropwizard-template-config -->
            <!--A Dropwizard Bundle that allows you to write your config.yaml as a Freemarker template.-->
            <!--This is especially useful when you need to access environment variables or system properties.-->
            <!--In fact, this project is the successor to the fabulous dropwizard-environment-config plugin.-->
            <dependency>
                <groupId>de.thomaskrille</groupId>
                <artifactId>dropwizard-template-config</artifactId>
                <version>${dropwizard.template.config.version}</version>
            </dependency>

            <dependency>
                <groupId>cloud.benchflow</groupId>
                <artifactId>benchflow-dsl</artifactId>
                <version>feature-devops-single-rep</version>
                <scope>system</scope>
                <systemPath>${main.basedir}/target/${benchflow-dsl.project.name}_${benchflow-dsl.version}.jar</systemPath>
            </dependency>
            
            <!-- TODO: move to the central repo release -->
            <dependency>
                <groupId>cloud.benchflow</groupId>
                <artifactId>benchflow-faban-client</artifactId>
                <version>dev</version>
                <scope>system</scope>
                <systemPath>${main.basedir}/target/benchflow-faban-client.jar</systemPath>
            </dependency>

            <dependency>
                <groupId>org.mongodb.morphia</groupId>
                <artifactId>morphia</artifactId>
                <version>${morphia.version}</version>
            </dependency>

            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <!--https://github.com/palantir/docker-compose-rule-->
            <!--This is a library for executing JUnit tests that interact with Docker Compose managed containers-->
            <dependency>
                <groupId>com.palantir.docker.compose</groupId>
                <artifactId>docker-compose-rule-junit4</artifactId>
                <version>${docker-compose-rule-junit4.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock-standalone</artifactId>
                <version>${wiremock.version}</version>
            </dependency>

            <!--https://github.com/smoketurner/dropwizard-swagger-->
            <dependency>
                <groupId>com.smoketurner</groupId>
                <artifactId>dropwizard-swagger</artifactId>
                <version>${dropwizard-swagger.version}</version>
                <exclusions>
                    <!--need this exclusion because of conflict with dropwizard-core-->
                    <!--https://github.com/smoketurner/dropwizard-swagger/issues/72-->
                    <exclusion>
                        <groupId>org.glassfish.jersey.containers</groupId>
                        <artifactId>jersey-container-servlet-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>${download-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>download-${benchflow-dsl.project.name}</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>wget</goal>
                            </goals>
                            <configuration>
                                <url>https://dl.bintray.com/benchflow/benchflow-maven/${benchflow-dsl.project.name}_${benchflow-dsl.version}.jar</url>
                                <unpack>false</unpack>
                                <outputFileName>${benchflow-dsl.project.name}_${benchflow-dsl.version}.jar</outputFileName>
                            </configuration>
                        </execution>
                        <!-- TODO: move to the central repo release -->
                        <execution>
                            <id>download-faban-client</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>wget</goal>
                            </goals>
                            <configuration>
                                <url>https://github.com/benchflow/faban-client/releases/download/v-dev/benchflow-faban-client.jar</url>
                                <unpack>false</unpack>
                                <outputFileName>benchflow-faban-client.jar</outputFileName>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!--&lt;!&ndash; Initial attemp from: http://www.eclipse.org/m2e/documentation/m2e-execution-not-covered.html &ndash;&gt;-->
                <!--<plugin>-->
                    <!--<groupId>org.eclipse.m2e</groupId>-->
                    <!--<artifactId>lifecycle-mapping</artifactId>-->
                    <!--<version>1.0.0</version>-->
                    <!--<configuration>-->
                        <!--<lifecycleMappingMetadata>-->
                            <!--<pluginExecutions>-->
                                <!--<pluginExecution>-->
                                    <!--<pluginExecutionFilter>-->
                                        <!--<groupId>com.googlecode.maven-download-plugin</groupId>-->
                                        <!--<artifactId>download-maven-plugin</artifactId>-->
                                        <!--<versionRange>${download-maven-plugin.version}</versionRange>-->
                                        <!--<goals>-->
                                            <!--<goal>wget</goal>-->
                                        <!--</goals>-->
                                    <!--</pluginExecutionFilter>-->
                                    <!--<action>-->
                                        <!--<execute>-->
                                            <!--<runOnIncremental>false</runOnIncremental>-->
                                        <!--</execute>-->
                                    <!--</action>-->
                                <!--</pluginExecution>-->
                            <!--</pluginExecutions>-->
                        <!--</lifecycleMappingMetadata>-->
                    <!--</configuration>-->
                <!--</plugin>-->
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>${download-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <configuration>
                    <mainClass>${project.mainclass}</mainClass>
                    <arguments>
                        <argument>server</argument>
                        <argument>${project.configurationfile}</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.verions}</version>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <outputDirectory>${session.executionRootDirectory}/target</outputDirectory>
                    <finalName>${project.name}</finalName>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${project.mainclass}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>false</skipTests>
                </configuration>
            </plugin>
            <!--to run integration tests-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>