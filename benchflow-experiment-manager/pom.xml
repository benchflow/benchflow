<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>cloud.benchflow</groupId>
    <artifactId>benchflow</artifactId>
    <version>0.1.0</version>
  </parent>

  <groupId>cloud.benchflow</groupId>
  <artifactId>benchflow-experiment-manager</artifactId>
  <version>0.1.0</version>
  <name>benchflow-experiment-manager</name>

  <packaging>pom</packaging>
  <modules>
    <module>api</module>
    <module>application</module>
  </modules>

  <properties>
    <project.name>benchflow-experiment-manager</project.name>
    <project.mainclass>cloud.benchflow.experimentmanager.BenchFlowExperimentManagerApplication</project.mainclass>
    <project.configurationfile>configuration.yml</project.configurationfile>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <main.basedir>${project.basedir}</main.basedir>
    <root.project.basedir>${project.basedir}/../</root.project.basedir>
    <java.version>1.8</java.version>
    <dropwizard.version>1.0.6</dropwizard.version>
    <dropwizard.template.config.version>1.4.0</dropwizard.template.config.version>
    <benchflow-dsl.project.name>benchflow-dsl</benchflow-dsl.project.name>
    <benchflow-dsl-jar.version>fix-dm-demo-conversion-mix_8653a4</benchflow-dsl-jar.version>
    <benchflow-faban-client.project.name>benchflow-faban-client</benchflow-faban-client.project.name>
    <benchflow-faban-client-jar.version>devel_e23d01</benchflow-faban-client-jar.version>
    <benchflow-faban-client.version>0.1.0</benchflow-faban-client.version>
    <benchflow-dsl.version>0.1.0</benchflow-dsl.version>
    <guava.version>22.0</guava.version>
    <morphia.version>1.3.2</morphia.version>
    <minio.version>3.0.3</minio.version>
    <commons-io.version>2.5</commons-io.version>
    <docker-compose-rule-junit4.version>0.31.1</docker-compose-rule-junit4.version>
    <wiremock.version>2.5.1</wiremock.version>
    <dropwizard-swagger.version>1.0.6-1</dropwizard-swagger.version>
    <failsafe.version>1.0.4</failsafe.version>
    <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
    <maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
    <maven-source-plugin.version>2.4</maven-source-plugin.version>
    <maven-project-info-reports-plugin.version>2.8.1</maven-project-info-reports-plugin.version>
    <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
    <maven-shade-plugin.verion>2.4.1</maven-shade-plugin.verion>
    <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
    <maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>2.20</maven-failsafe-plugin.version>
    <download-maven-plugin.version>1.3.0</download-maven-plugin.version>
    <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
  </properties>

  <repositories>
    <!-- for docker-compose-rule -->
    <repository>
      <id>palantir</id>
      <url>https://dl.bintray.com/palantir/releases</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-core</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-testing</artifactId>
        <version>${dropwizard.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-client</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-forms</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>

      <!-- https://github.com/tkrille/dropwizard-template-config -->
      <!--A Dropwizard Bundle that allows you to write your config.yaml as a Freemarker template.-->
      <!--This is especially useful when you need to access environment variables or system properties.-->
      <!--In fact, this project is the successor to the fabulous dropwizard-environment-config plugin.-->
      <dependency>
        <groupId>de.thomaskrille</groupId>
        <artifactId>dropwizard-template-config</artifactId>
        <version>${dropwizard.template.config.version}</version>
      </dependency>

      <dependency>
        <groupId>cloud.benchflow</groupId>
        <artifactId>benchflow-dsl</artifactId>
        <version>${benchflow-dsl-jar.version}</version>
      </dependency>

      <dependency>
        <groupId>cloud.benchflow</groupId>
        <artifactId>faban-client</artifactId>
        <version>${benchflow-faban-client-jar.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mongodb.morphia</groupId>
        <artifactId>morphia</artifactId>
        <version>${morphia.version}</version>
      </dependency>

      <dependency>
        <groupId>io.minio</groupId>
        <artifactId>minio</artifactId>
        <version>${minio.version}</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <!--https://github.com/palantir/docker-compose-rule-->
      <!--This is a library for executing JUnit tests that interact with Docker Compose managed containers-->
      <dependency>
        <groupId>com.palantir.docker.compose</groupId>
        <artifactId>docker-compose-rule-junit4</artifactId>
        <version>${docker-compose-rule-junit4.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.tomakehurst</groupId>
        <artifactId>wiremock-standalone</artifactId>
        <version>${wiremock.version}</version>
      </dependency>

      <!-- https://github.com/jhalterman/failsafe -->
      <!-- for handling failures (e.g. retries) -->
      <dependency>
        <groupId>net.jodah</groupId>
        <artifactId>failsafe</artifactId>
        <version>${failsafe.version}</version>
      </dependency>

      <!--https://github.com/smoketurner/dropwizard-swagger-->
      <dependency>
        <groupId>com.smoketurner</groupId>
        <artifactId>dropwizard-swagger</artifactId>
        <version>${dropwizard-swagger.version}</version>
        <exclusions>
          <!--need this exclusion because of conflict with dropwizard-core-->
          <!--https://github.com/smoketurner/dropwizard-swagger/issues/72-->
          <exclusion>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.googlecode.maven-download-plugin</groupId>
          <artifactId>download-maven-plugin</artifactId>
          <version>${download-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>download-${benchflow-dsl.project.name}</id>
              <phase>clean</phase>
              <goals>
                <goal>wget</goal>
              </goals>
              <configuration>
                <url>https://dl.bintray.com/benchflow/benchflow-maven/${benchflow-dsl.project.name}_${benchflow-dsl-jar.version}.jar</url>
                <unpack>false</unpack>
                <outputDirectory>${main.basedir}/external</outputDirectory>
                <outputFileName>${benchflow-dsl.project.name}_${benchflow-dsl-jar.version}.jar</outputFileName>
              </configuration>
            </execution>
            <execution>
              <id>download-${benchflow-faban-client.project.name}</id>
              <phase>clean</phase>
              <goals>
                <goal>wget</goal>
              </goals>
              <configuration>
                <url>https://dl.bintray.com/benchflow/benchflow-maven/${benchflow-faban-client.project.name}_${benchflow-faban-client-jar.version}.jar</url>
                <unpack>false</unpack>
                <outputDirectory>${main.basedir}/external</outputDirectory>
                <outputFileName>${benchflow-faban-client.project.name}_${benchflow-faban-client-jar.version}.jar</outputFileName>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>${download-maven-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven-install-plugin.version}</version>
        <executions>
          <execution>
            <id>benchflow-dsl</id>
            <phase>post-clean</phase>
            <configuration>
              <file>${main.basedir}/external/${benchflow-dsl.project.name}_${benchflow-dsl-jar.version}.jar</file>
              <repositoryLayout>default</repositoryLayout>
              <groupId>cloud.benchflow</groupId>
              <artifactId>benchflow-dsl</artifactId>
              <version>${benchflow-dsl-jar.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
            <goals>
              <goal>install-file</goal>
            </goals>
          </execution>
          <execution>
            <id>benchflow-faban-client</id>
            <phase>post-clean</phase>
            <configuration>
              <file>${main.basedir}/external/${benchflow-faban-client.project.name}_${benchflow-faban-client-jar.version}.jar</file>
              <repositoryLayout>default</repositoryLayout>
              <groupId>cloud.benchflow</groupId>
              <artifactId>faban-client</artifactId>
              <version>${benchflow-faban-client-jar.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
            <goals>
              <goal>install-file</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>initialize-project</id>
            <!--<phase>initialize</phase>-->
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!--<skip>true</skip>-->
          <executable>mvn</executable>
          <arguments>
            <argument>clean</argument>
            <argument>post-clean</argument>
            <argument>compile</argument>
          </arguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.verion}</version>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
          <outputDirectory>${session.executionRootDirectory}/target</outputDirectory>
          <finalName>${project.name}</finalName>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${project.mainclass}</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <skipTests>false</skipTests>
          <!-- Needed because the automatic inclusions (see http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html) lead to some IT test to run due to the pattern matching -->
          <excludes>
            <exclude>**/*IT.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <!--to run integration tests-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
          <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>
</project>
