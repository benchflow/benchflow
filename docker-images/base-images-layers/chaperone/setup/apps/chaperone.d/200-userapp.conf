# 200-userapp.conf
# 
# This is a sample user applciation file.   It runs a simple script which outputs
# information directly to stdout, just so you know it's there.

settings: {

  env_set: {
    'MY_ENV_VAR': 'You can set global environment variables here.',
  }

}

# This is a sample oneshot service that runs at IDLE time, just before the console app, if present.
# It will output something so at least something appears on the screen.

sample.service: {
  # This is a oneshot service, but most likely a real applicaton will be another type
  # such as 'simple', or 'forking'.
  type: oneshot,
  enabled: true,   # CHANGE TO 'false' so this app doesn't run any more

  # Command output goes directly to stdout instead of to the syslog.
  # Note that you normally want to have services output to the syslog, because
  # chaperone's logging directives allow you to echo syslog data to stdout.  That's
  # a better place to control things (see 010-start.conf).
  command: "$(APPS_DIR)/bin/sample_app",
  stdout: inherit,

  # Because we're in the IDLE group, we will run only after all system services have
  # started.  However, if there is a command line program, like /bin/bash, we want to
  # run before that one.  All upper-case group names have special meanings.  However,
  # You can define your own service groups, then use them to declare startup
  # dependencies.
  service_groups: "IDLE",
  before: "CONSOLE",

  # These environment variables will be added only for your service
  env_set: {
    'INTERACTIVE': '$(_CHAP_INTERACTIVE)',
  }
}
