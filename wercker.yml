###########################################################
# DESCRIPTION
# The main wercker configuration is meant to detect changes in the project structure in order to trig the pipelines for the changes projects
###########################################################
box: ubuntu:16.10

# TODO: work on caching for all the steps

###########################################################
# DRAFT
# Main pipeline to detect what has been changed 
###########################################################
what-to-build:
  steps:
    # TODO: # this is going to be moved and handled by a requirements file in devops / base-images for building (fast approach for the first iterations, improved over time)
    - install-packages:
        packages: jq curl
    - script:
        name: Check diffs and trigger builds
        cwd: ./devops
        code: |
          # Check diffs and trigger builds
          ./diffs-check-and-trigger-builds.sh
    - script:
        name: Add a file to WERCKER_OUTPUT_DIR, to speed up the not needed store step
        code: touch $WERCKER_OUTPUT_DIR/.skip

# TODO: similar pipelines can be made generic and triggered using env variables to set the actual project to build

###########################################################
# DRAFT
# BUILD PIPELINES
###########################################################

###########################################################
# DRAFT
# Pipeline used to build: benchflow-dsl
###########################################################
build-benchflow-dsl:
  box: maven:3.3.9-jdk-8
  steps:
    # Since now we do not have the deploy phase in our project, it would fail to call it, then we stop to the verify phase, that include also the package one. 
    - xenoterracide/maven:
        goals: verify
        args: -f $WERCKER_SOURCE_DIR/benchflow-dsl
    - script:
        name: Copy benchflow-dsl to WERCKER_OUTPUT_DIR
        code: cp $WERCKER_SOURCE_DIR/benchflow-dsl/target/benchflow-dsl.jar $WERCKER_OUTPUT_DIR

###########################################################
# DRAFT
# DEPLOY PIPELINES
###########################################################

###########################################################
# DRAFT
# Pipeline used to deploy on Bintray: benchflow-dsl
###########################################################
deploy-benchflow-dsl:
  steps:
     # TODO: # this is going to be moved and handled by a requirements file in devops / base-images for building (fast approach for the first iterations, improved over time)
    - install-packages:
        packages: jq curl
    - script:
        name: Generate the Image Tag
        cwd: ./devops
        code: ./generate-commit-specific-tag.sh
    - script:
        name: Deliver benchflow-dsl on Bintray
        cwd: ./devops
        code: |
          # Deliver branch and commit specific artifacts on Bintray
          export ARTIFACT_NAME=benchflow-dsl
          ./deliver-on-bintray.sh

###########################################################
# DRAFT
# BUILD AND DEPLOY PIPELINES
###########################################################

###########################################################
# DRAFT
# Pipeline used to build and deploy on Docker Hub: docker-images/base-images/base
###########################################################
build-and-deploy-base-images-base:
  box: ubuntu:16.10
  steps:
    - script:
        name: Build the Image
        cwd: ./docker-images/base-images/base
        code: ./build-image.sh
    - script:
        name: Cleanup the Image
        cwd: ./devops
        code: ./cleanup-wercker-build.sh
    - script:
        name: Generate the Image Tag
        cwd: ./devops
        code: ./generate-commit-specific-tag.sh
    # push container as-is
    - internal/docker-push:
        author: Vincenzo FERME <info@vincenzoferme.it>
        disable-sync: false
        repository: benchflow/base-images
        email: $DOCKER_HUB_EMAIL
        username: $DOCKER_HUB_USERNAME
        password: $DOCKER_HUB_PASSWORD
        # NOTE: first we push the commit specific image, then the image for the branch
        tag: $CUSTOM_VERSION_TAG,$WERCKER_GIT_BRANCH
        entrypoint: "/usr/local/bin/chaperone"